@model byte_hunt.Models.Contribuicao
@using Microsoft.AspNetCore.Identity
@using Microsoft.IdentityModel.Tokens

@{
    ViewData["Title"] = "Detalhes da Contribuição";
    <link rel="stylesheet" href="~/css/contribuicoes_crud.css" asp-append-version="true"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

    var detalhes = Model.DetalhesContribuicao ?? "";
    string nome = "", marca = "", preco = "", descricao = "";

    string Extract(string source, string startTag, string nextTag) {
        if (!source.Contains(startTag)) return "";
        int start = source.IndexOf(startTag) + startTag.Length;
        int end = nextTag != null && source.Contains(nextTag) ? source.IndexOf(nextTag, start) : source.Length;
        return source.Substring(start, end - start).Trim();
    }

    nome = Extract(detalhes, "Nome:", "Marca:");
    marca = Extract(detalhes, "Marca:", "Preço:");
    preco = Extract(detalhes, "Preço:", "Descrição:");
    descricao = Extract(detalhes, "Descrição:", null);
}

<div class="background-image"></div>
<div class="form-container-wide">
    <h1 class="text-center mb-4">Detalhes da Contribuição</h1>

    <dl class="row">
        <span class="d-block text-center fw-bold fs-5 text-muted my-2">---- Contribuição ----</span>
        <dt class="col-sm-3">Nome</dt>
        <dd class="col-sm-9">@nome</dd>
        <dt class="col-sm-3">Marca</dt>
        <dd class="col-sm-9">@marca</dd>
        <dt class="col-sm-3">Preço €</dt>
        <dd class="col-sm-9">@preco</dd>
        <dt class="col-sm-3">Descrição</dt>
        <dd class="col-sm-9">@descricao</dd>

        <span
            class="d-block text-center fw-bold fs-5 text-muted my-2 mb-3">---- Detalhes da Contribuição ----</span><br/>

        <div class="row text-center fw-bold mb-2">
            <div class="col-md-4">Utilizador</div>
            <div class="col-md-4">Data da Contribuição</div>
            @if (Model.DataEditada != null) {
                <div class="col-md-4">Data Última Edição</div>
            }
        </div>
        <div class="row text-center mb-4">
            <div class="col-md-4">@Html.DisplayFor(model => model.Utilizador.Nome)</div>
            <div class="col-md-4">@Html.DisplayFor(model => model.DataContribuicao)</div>
            @if (Model.DataEditada != null) {
                <div class="col-md-4">@Html.DisplayFor(model => model.DataEditada)</div>
            }
        </div>

        @{
            var userId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
        }

        @if (Model.Status == "Pending") {
            <div class="row text-center fw-bold mb-2">
                <div class="col-sm-4">Estado Atual</div>
                <div class="col-sm-4">Responsável</div>
            </div>

            <div class="row text-center">
                <div class="col-sm-4">@Html.DisplayFor(model => model.Status)</div>
                <div class="col-sm-4">
                    @(Model.ResponsavelId.IsNullOrEmpty() ? "Ainda não atribuído" : Model.Responsavel?.Nome)
                </div>
            </div>

            @if (User.IsInRole("Moderator") || User.IsInRole("Administrator")) {
                if (userId == Model.ResponsavelId || User.IsInRole("Administrator")) {
                    <form asp-action="UpdateStatus" method="post" class="w-100 mt-4">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="Id" value="@Model.Id"/>
                        <div class="form-group text-center d-flex justify-content-center gap-3">
                            <button name="status" value="Approved" class="btn btn-success px-4">Aprovar</button>
                            <button name="status" value="Rejected" class="btn btn-danger px-4">Rejeitar</button>
                        </div>
                    </form>
                }
                else if (Model.ResponsavelId.IsNullOrEmpty()) {
                    <div class="d-flex justify-content-center mt-4">
                        <form asp-action="Claim" method="post" asp-route-id="@Model.Id" asp-route-returnUrl="@Url.Action("Details", new { id = Model.Id })">
                            <button type="submit" class="btn btn-success px-4">Assumir</button>
                        </form>
                    </div>
                }
            }
        }
        else {
            <div class="row text-center fw-bold mb-2">
                <div class="col-sm-4">Estado Atual</div>
                <div class="col-sm-4">Responsável</div>
                <div class="col-sm-4">Data de Revisão</div>
            </div>

            <div class="row text-center">
                <div class="col-sm-4">@Html.DisplayFor(model => model.Status)</div>
                <div class="col-sm-4">
                    @(Model.Responsavel != null && !string.IsNullOrWhiteSpace(Model.Responsavel.Nome)
                        ? Model.Responsavel.Nome
                        : "—")
                </div>
                <div class="col-sm-4">
                    @Model.DataReview?.ToString("dd/MM/yyyy HH:mm")
                </div>
            </div>
        }
    </dl>

    <a asp-action="Index" class="btn btn-dark rounded-pill">
        <i class="bi bi-arrow-left"></i> Voltar à Lista
    </a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
