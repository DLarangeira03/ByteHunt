@model List<byte_hunt.Controllers.UserRolesViewModel>

@{
    ViewData["Title"] = "Painel de Administração | Gerir Utilizadores";
    var allRoles = ViewBag.AllRoles as List<string> ?? new List<string>();
}
@if (TempData["RoleRemovalConfirmation"] != null) {
    var infoModel = new byte_hunt.Models.Popups.InfoPopupViewModel {
        Titulo = "Permissão Removida",
        Mensagem = TempData["RoleRemovalConfirmation"].ToString()
    };
    @Html.Partial("_InfoPopup", infoModel)
}

<h1>Gerir Permissões</h1>

<table class="table table-borderless">
    <thead>
    <th>Utilizador</th>
    <th>Cargos</th>
    <th class="text-end">Gerir</th>
    </thead>
    <tbody>
    @foreach (var user in Model) {
        <tr>
            <td> @user.UserName </td>
            <td>
                @foreach (var role in user.Roles) {
                    <form method="post" asp-action="RemoveRole" style="display:inline" class="remove-role-form">
                        <input type="hidden" name="userId" value="@user.UserId"/>
                        <input type="hidden" name="role" value="@role"/>
                        <button type="button" class="btn btn-sm btn-outline-danger confirm-action-btn"
                                data-user="@user.UserName"
                                data-role="@role"
                                data-userid="@user.UserId"
                                data-question="Tem a certeza que pretende remover a role '@role' do utilizador @user.UserName?"
                                data-action="@Url.Action("RemoveRole")"
                                data-title="Confirmar Remoção"
                                data-confirmtext="Remover">
                            @role
                        </button>
                    </form>
                }
            </td>
            <td class="text-end">
                <form asp-action="AddRole" method="post"
                      class="d-inline-flex gap-2 align-items-center justify-content-end">
                    <input type="hidden" name="userId" value="@user.UserId"/>
                    <select name="role" class="form-select form-select-sm w-auto" required>
                        <option value="" disabled selected>Selecione uma role</option>
                        @foreach (var roleName in allRoles.Except(user.Roles)) {
                            <option value="@roleName">@roleName</option>
                        }
                    </select>
                    <button type="submit" class="btn btn-sm btn-primary">Add</button>
                </form>
            </td>
        </tr>
    }
    </tbody>
</table>

@section Scripts {
    @* modal de informacao *@
    <script>
        window.addEventListener('DOMContentLoaded', () => {
            const modalEl = document.getElementById('infoModal');
            if (modalEl) {
                const modal = new bootstrap.Modal(modalEl);
                modal.show();
            }
        });
    </script>

    @* script de confimacar generalizado *@
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const confirmModalEl = document.getElementById('confirmModal');
            const confirmModal = new bootstrap.Modal(confirmModalEl);
            const form = confirmModalEl.querySelector('form');
            const questionEl = confirmModalEl.querySelector('.modal-body p');
            const titleEl = confirmModalEl.querySelector('.modal-title');
            const confirmBtn = form.querySelector('button[type="submit"]');

            const createHiddenInput = (name, value) => {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = name;
                input.value = value;
                return input;
            };

            document.querySelectorAll('.confirm-action-btn').forEach(button => {
                button.addEventListener('click', () => {
                    const dataset = button.dataset;

                    // definir conteudo
                    titleEl.textContent = dataset.title || "Confirmar Ação";
                    questionEl.textContent = dataset.question || "Tem a certeza?";
                    confirmBtn.textContent = dataset.confirmtext || "Confirmar";
                    
                    // definir action e method
                    form.action = dataset.action || "#";
                    form.method = dataset.method || "post";

                    // remover inputs ja existentes
                    form.querySelectorAll('input[name]').forEach(i => i.remove());

                    // adicinar inputs para as entrys do dataset
                    for (const [key, value] of Object.entries(dataset)) {
                        if (["title", "question", "confirmtext", "action", "method"].includes(key)) continue;
                        form.appendChild(createHiddenInput(key, value));
                    }
                    
                    confirmModal.show();
                });
            });
        });
    </script>
}

@{
    var confirmModel = new byte_hunt.Models.Popups.ConfirmPopupViewModel {
        Titulo = "Confirmar",  // altera com js
        Pergunta = "",
        ConfirmBtnText = "Confirmar", // altera com js
        CancelBtnText = "Cancelar", // altera com js
        ActionUrl = "",
        FormMethod = "post"
    };
    @Html.Partial("_ConfirmPopup", confirmModel)
}
